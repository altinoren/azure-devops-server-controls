// Copyright (C) Microsoft Corporation. All rights reserved.
define("Build/BuildResult/Resources", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Abandoned = "Abandoned";
    exports.AddTag = "Add a tag";
    exports.AddTags = "Add tags";
    exports.Ago = "Ago";
    exports.AcquiredBy = "Acquired by {0}";
    exports.AgentWaitingText1 = "Waiting for one of the matched agents";
    exports.AgentWaitingText2 = "satisfying demands";
    exports.AgentWaitingText3 = "to acquire the job";
    exports.AgentWaitingTextNoRequest = "Waiting for the agent request to be queued";
    exports.AgentWaitingTextAssigned = "Waiting for the agent {0} to run the job";
    exports.AriaBranch = "{0} branch";
    exports.AnnounceBuildResult = "Build {0} {1}";
    exports.AriaBuildTimelineChevron = "Show build summary details";
    exports.AriaHistogramBuildsList = "History of builds";
    exports.AriaChangesList = "List of changes";
    exports.AriaCommit = "{0} commit";
    exports.AriaExploreArtifacts = "Explore {0} artifacts";
    exports.AriaDownloadArtifact = "Download {0} artifact";
    exports.AriaIssuesList = "List of issues";
    exports.AriaPipeline = "Build {0} for {1} pipeline";
    exports.AriaPullrequest = "{0} pullrequest";
    exports.AriaTagsList = "List of tags";
    exports.AriaTagsSection = "Build tags section";
    exports.AriaTagSuggestions = "Tag suggestions";
    exports.AriaRepository = "{0} repository";
    exports.AriaResultsAvailable = "{0} results available";
    exports.AriaShowAllChanges = "Show all changes";
    exports.AriaShowAllWorkItems = "Show all work items";
    exports.AriaWorkItemsList = "List of workitems";
    exports.Artifacts = "Artifacts";
    exports.AssociatedChanges = "Associated changes";
    exports.AssignedTo = "Assigned to";
    exports.Attempt = "Attempt";
    exports.Attempts = "Attempts";
    exports.AuthoredFormat = "{0} authored";
    exports.AuthorizedResourcesButtonText = "Resources authorized";
    exports.AuthorizeResourcesButtonText = "Authorize resources";
    exports.AuthorizeResourcesErrorMessage = "An error occurred while auto-authorizing resources";
    exports.AuthorizeResourcesSuccessMessage = "Resources were successfully authorized";
    exports.BuildsHubName = "Builds";
    exports.BuildCompletionTriggerTitle = "Build completion trigger";
    exports.BranchNotFound = "Branch not found";
    exports.BuildDefinitionIsPaused = "Paused";
    exports.BuildDefinitionPausedMessage = "Build pipeline {0} is paused. Builds queued will not start until it is resumed.";
    exports.BuildLoadingText = "Loading...";
    exports.BuildNotFound = "Build not found";
    exports.BuildsSince = "Builds since ";
    exports.BuildSummaryDurationInformationFormat = "{0} {1}";
    exports.BuildStatusIndicatorFormat = "Build {0} {1} {2} {3}";
    exports.BuildTimelinePrimaryText = "Build pipeline {0}";
    exports.ByFormat = "by {0}";
    exports.Completed = "Completed";
    exports.CancelBuild = "Cancel build";
    exports.CancelingBuild = "Canceling build";
    exports.Canceling = "Canceling";
    exports.Canceled = "Canceled";
    exports.CommitHashHeader = "Change {0}";
    exports.CommitsFormat = "{0} commit(s)";
    exports.CompletedAfter = "Completed after {0}";
    exports.ConfirmCancelBuild = "Are you sure you want to cancel build \u0027{0}\u0027?";
    exports.CopyLogsLocation = "Copy logs location";
    exports.DeletedFormat = "{0} deleted";
    exports.DiagAgentTitle = "Agent";
    exports.DiagSectionTitle = "Agent diagnostic logs";
    exports.DiagPhaseTitle = "Job";
    exports.Disabled = "Disabled";
    exports.DownloadAllLogs = "All logs";
    exports.DownloadAllLogsInOverflow = "Download all logs";
    exports.DownloadArtifacts = "Artifacts";
    exports.DownloadStageLogs = "Stage logs";
    exports.Enabled = "Enabled";
    exports.Errors = "Error(s)";
    exports.Failed = "Failed";
    exports.EditDefinition = "Edit pipeline";
    exports.ForFormat = "for {0}";
    exports.ForFormatPR = "for {0} targeting {1}";
    exports.From = "from";
    exports.FromQueue = "from queue";
    exports.HideMoreTags = "Show fewer tags";
    exports.InitializePhase = "Prepare job";
    exports.IssueListExpandMessage = "Expand issue #{0}";
    exports.JobStatusIndicatorFormat = "Job {0} {1}";
    exports.LoadingText = "Loading...";
    exports.LogsTabName = "Logs";
    exports.ManuallyQueued = "Manually queued";
    exports.MillisecondsFormat = "{0} milliseconds";
    exports.MergeFrom = "Merge from";
    exports.NoArtifactsFound = "No artifacts found";
    exports.NoBuildsFound = "No builds found";
    exports.NoChangesFound = "No changes found";
    exports.NoTasksRetreived = "No tasks found";
    exports.NoJobsFound = "No jobs found";
    exports.NoIssuesRetrieved = "No issues retrieved";
    exports.None = "None";
    exports.NoPermissionsToEditTags = "You don’t have permission to edit tags";
    exports.NoResultsFound = "No results found";
    exports.NotStarted = "Not started";
    exports.On = "On";
    exports.Offline = "Offline";
    exports.Online = "Online";
    exports.PendingChecks_Multiple = "{1} checks require your attention before this run can continue to {0}.";
    exports.PendingChecks_Single = "One check requires your attention before this run can continue to {0}.";
    exports.Position = "Position";
    exports.Progression = "Progression";
    exports.PullRequest = "Pull request";
    exports.PullRequestTitleFormat = "PR {0} : {1}";
    exports.Queued = "Queued";
    exports.QueuedFormat = "{0} queued";
    exports.QueuedFor = "Queued for";
    exports.QueueBuild = "Queue";
    exports.QueueBuildWithDiag = "Queue with diagnostics";
    exports.RanFor = "Ran for";
    exports.RanForFormat = "Ran for {0}";
    exports.ReasonBatchedCI = "Rolling build triggered";
    exports.ReasonBuildCompletion = "Build completion triggered";
    exports.ReasonRetention = "Retention policy triggered";
    exports.ReasonGatedValidationOf = "Gated checkin validation of";
    exports.ReasonIndividualCI = "Triggered";
    exports.ReasonManual = "Manually run";
    exports.ReasonShelveset = "Shelveset";
    exports.ReasonSchedule = "Scheduled";
    exports.ReasonValidationOf = "Validation of";
    exports.RetainBuild = "Retain";
    exports.Rebuild = "Rebuild";
    exports.RunningFor = "Running for";
    exports.RepositoryNotFound = "Repository not found";
    exports.RequestedFormat = "{0} requested";
    exports.RetainedByBuild = "Retained by build";
    exports.RetainedByBuildAndRelease = "Retained by build and release";
    exports.RetainedByRelease = "Retained by release";
    exports.Retry = "Retry";
    exports.ResultsTabName = "Summary";
    exports.Running = "Running";
    exports.ScheduledTrigger = "Scheduled trigger";
    exports.SearchBuildsText = "Search builds...";
    exports.SecondsFormat = "{0} seconds";
    exports.SetupAcquiringAgentHeader = "Setup - acquiring agent";
    exports.ShowAll = "Show all";
    exports.ShowMoreTags = "Show rest of the tags";
    exports.SignalRConnected = "Build live updates have been restored.";
    exports.SignalRDisconnected = "Build live updates have stopped. We’re working to restore them. Refresh the page to see any updates.";
    exports.SignalRReconnecting = "You’re not receiving build live updates. We’re working to restore them.";
    exports.SignalRSlow = "Build live updates could be delayed. We’re working to restore them.";
    exports.SignalRUserInactive = "Build live updates have stopped due to inactivity on the page. Refresh the page to see any updates.";
    exports.Skipped = "Skipped";
    exports.StageNameFormat = "{0} # {1}";
    exports.Started = "Started";
    exports.StartedAfter = "Started after {0} in queue";
    exports.Status = "Status";
    exports.StopBuild = "Stop build";
    exports.StopRetainingBuild = "Stop retaining build";
    exports.Succeeded = "Succeeded";
    exports.SucceededWithIssues = "Succeeded with issues";
    exports.SummaryBuildHeaderFormat = "{0} build for {1}";
    exports.SummaryBuildHeaderNoDisplayNameFormat = "{0} build";
    exports.StageIssues = "Stage issues";
    exports.TaskStatusIndicatorFormat = "Task {0} {1}";
    exports.Triggered = " triggered";
    exports.To = "To";
    exports.Unknown = "Unknown";
    exports.VariableHeader = "Queue time variables";
    exports.VariableKey = "Name";
    exports.VariableValue = "Value";
    exports.ViewBranchFormat = "View branch {0} in {1}";
    exports.ViewCommit = "View commit";
    exports.ViewDefinition = "View";
    exports.ViewLogs = "View logs";
    exports.ViewQueueVar = "View queue time variables";
    exports.ViewRepoFormat = "View repository {0}";
    exports.ViewPullrequest = "View pull request";
    exports.Warnings = "Warning(s)";
    exports.WaitingforLogs = "Waiting for console output...";
    exports.WaitingforJob = "Queueing the job...";
    exports.WorkItemsSectionHeader = "Linked work items";
});