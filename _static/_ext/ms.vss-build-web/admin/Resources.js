// Copyright (C) Microsoft Corporation. All rights reserved.
define("Build/Admin/Resources", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Add = "Add";
    exports.AddPool = "Add pool";
    exports.AddUserCapabilityDescription = "This action allows the agent to run jobs with a matching user-defined demand in a pipeline.";
    exports.AddUserCapabilityLink = "Add a new capability";
    exports.AddUserCapabilityNameLabel = "Name:";
    exports.AddUserCapabilityValueLabel = "Value:";
    exports.AddUserCapabilityTitle = "Add user-defined capability";
    exports.Agent = "Agent";
    exports.AgentAcquisitionDialogTitle = "Get the agent";
    exports.AgentListEmptyExperience = "No agents are registered or you do not have permission to view the agents.";
    exports.AgentPools = "Agent pools";
    exports.Agents = "Agents";
    exports.Cancel = "Cancel";
    exports.Capabilities = "Capabilities";
    exports.Completed = "Completed";
    exports.ConfigureAgentDarwinMarkdown = "```bash\r\n~/myagent$ ./config.sh\r\n```";
    exports.ConfigureAgentLinuxMarkdown = "```bash\r\n~/myagent$ ./config.sh\r\n```";
    exports.ConfigureAgentWindowsMarkdown = "```powershell\r\nPS C:\\agent\u003e .\\config.cmd\r\n```";
    exports.Confirm = "Confirm";
    exports.ConfirmDeleteAgentMessage = "Are you sure you want to delete agent {0}?{1}{2}This action will remove the agent from agent pool {3}.";
    exports.ConfirmDeleteTitle = "Confirm Deletion";
    exports.ConfirmDeleteUserCapabilityMessage = "Are you sure you want to delete the user-defined capability {0}?{1}{2}This action will cause this agent to no longer run jobs with the matching user defined demand in a pipeline.";
    exports.ConfirmDeleteUserCapabilityTitle = "Delete user-defined capability";
    exports.ConfirmDeletePoolMessageHosted = "Are you sure you want to delete agent pool {0}?{1}{2}This action will only remove the agent pool from your project and will not affect the associated agent pool at the organization level.";
    exports.ConfirmDeletePoolMessageOnPrem = "Are you sure you want to delete agent pool {0}?{1}{2}This action will only remove the agent pool from your project and will not affect the associated agent pool at the collection level.";
    exports.ConfirmUpdateAgentMessage = "Are you sure you want to update agent {0}?{1}{2}All running jobs on this agent will complete before this action begins. All queued jobs for this agent will be delayed until the update is complete.";
    exports.ConfirmUpdateAllAgentsMessage = "Are you sure you want to update all agents in agent pool {0}?{1}{2}All running jobs will complete before this action begins. All queued jobs will be delayed until the update is complete.";
    exports.ConfirmUpdateTitle = "Confirm Update";
    exports.Create = "Create";
    exports.CreateNewPoolDescriptionHosted = "Add an agent pool for use with this project. You may select an existing agent pool from the organization or create a new one.";
    exports.CreateNewPoolDescriptionOnPrem = "Add an agent pool for use with this project. You may select an existing agent pool from the collection or create a new one.";
    exports.CreateNewPoolTitle = "Add agent pool";
    exports.Delete = "Delete";
    exports.Demands = "Demands";
    exports.DeprecatedAgent = "Deprecated agent version. Please migrate.";
    exports.Details = "Details";
    exports.Disabled = "Disabled";
    exports.DismissNotification = "Dismiss notification";
    exports.DownloadAgentDarwinMarkdown = "```bash\r\n~/$ mkdir myagent \u0026\u0026 cd myagent\r\n~/myagent$ tar zxvf ~/Downloads/{0}\r\n```";
    exports.DownloadAgentLinuxMarkdown = "```bash\r\n~/$ mkdir myagent \u0026\u0026 cd myagent\r\n~/myagent$ tar zxvf ~/Downloads/{0}\r\n```";
    exports.DownloadAgentWindowsMarkdown = "```powershell\r\nPS C:\\\u003e mkdir agent ; cd agent\r\nPS C:\\agent\u003e Add-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"$HOME\\Downloads\\{0}\", \"$PWD\")\r\n```";
    exports.Duration = "Duration";
    exports.Enabled = "Enabled";
    exports.Hosted = "Hosted";
    exports.Idle = "Idle";
    exports.InvalidCapabilityNameEmpty = "Capability name cannot be empty";
    exports.InvalidCapabilityNameTooLong = "Capability name must be less than 256 characters";
    exports.InvalidCapabilityNameWhitespace = "Capability name cannot begin or end with whitespace";
    exports.InvalidCapabilityValue = "Invalid value";
    exports.Jobs = "Jobs";
    exports.LastRun = "Last run";
    exports.ManagePoolRolesNoPermissions = "You do not have permission to manage this poolâ€™s roles.";
    exports.Name = "Name";
    exports.NewAgent = "New agent";
    exports.NewPoolNameLabel = "New agent pool name";
    exports.NoExistingPoolToolTip = "All pools available to this project have already been added.";
    exports.NoUserCapabilities = "No user-defined capabilities";
    exports.Now = "Now";
    exports.Off = "Off";
    exports.Offline = "Offline";
    exports.On = "On";
    exports.Online = "Online";
    exports.PipelineSecurityTitle = "Pipeline permissions";
    exports.PipelineSecurityAuthorizeAll = "Grant access permission to all pipelines";
    exports.PoolDescriptionLabel = "Description";
    exports.PoolDescriptionNotFound = "No pool description found.";
    exports.PoolOwnerLabel = "Owner";
    exports.Private = "Private";
    exports.Project = "Project";
    exports.ProjectPoolsSecurityPanelDescription = "Manage user permissions for all pools within the project.";
    exports.ProjectPoolsSecurityPanelTitle = "User permissions";
    exports.Queued = "Queued";
    exports.QueuedAtTime = "Queued {0}";
    exports.QueuedJobs = "Queued jobs";
    exports.RunAgentDarwinMarkdown = "```bash\r\n~/myagent$ ./run.sh\r\n```";
    exports.RunAgentLinuxMarkdown = "```bash\r\n~/myagent$ ./run.sh\r\n```";
    exports.RunAgentWindowsMarkdown = "```powershell\r\nPS C:\\agent\u003e .\\run.cmd\r\n```";
    exports.RunningJobs = "Running jobs";
    exports.RunningRequestInformation = "Running {0} {1}";
    exports.Save = "Save";
    exports.SearchByKeyword = "Search by keyword";
    exports.Security = "Security";
    exports.SelectPoolLabel = "Select an existing pool";
    exports.Started = "Started";
    exports.Status = "Current status";
    exports.SystemCapabilities = "System capabilities";
    exports.TaskAgentJobNumberFormat = "Job {0}";
    exports.TaskAgentJobNameFormat = "{0} - {1}";
    exports.TaskAgentJobListUnknown = "Unknown";
    exports.UserCapabilitiesCardTitle = "User-defined capabilities";
    exports.UserSecurityTitle = "User permissions";
    exports.Undo = "Undo";
    exports.Update = "Update";
    exports.UpdateAgent = "Update agent";
    exports.UpdateAllAgents = "Update all agents";
    exports.UseExistingPoolLabel = "Existing";
    exports.UseNewPoolLabel = "New";
    exports.Value = "Value";
    exports.WaitTime = "Wait time";
});